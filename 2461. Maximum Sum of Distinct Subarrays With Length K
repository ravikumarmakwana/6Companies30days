public class Solution {
    public long MaximumSubarraySum(int[] nums, int k) {
        long maxSum = 0, sum = 0;

        HashSet<int> hashSet = new();
        int n = nums.Length;
        int l = 0, r = 0;
        while(r < n)
        {
            sum += nums[r];
            while(!hashSet.Add(nums[r]))
            {
                sum -= nums[l];
                hashSet.Remove(nums[l]);
                l++;
            }

            while(hashSet.Count > k)
            {
                sum -= nums[l];
                hashSet.Remove(nums[l]);
                l++;
            }

            if(hashSet.Count == k)
            {
                maxSum = Math.Max(maxSum, sum);
            }
            r++;
        }

        return maxSum;
    }
}
