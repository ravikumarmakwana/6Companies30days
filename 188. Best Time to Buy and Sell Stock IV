public class Solution {
    public int MaxProfit(int k, int[] prices) {
        int n = prices.Length;
        int[,,] dp = new int[n + 1, 2, k + 1];

        for(int index = n - 1; index >= 0; index--)
        {
            for(int buy = 0; buy < 2; buy++)
            {
                for(int transactions = 1; transactions <= k; transactions++)
                {
                    if(buy == 0)
                    {
                        dp[index, buy, transactions] = Math.Max(
                            -prices[index] + dp[index + 1, 1, transactions],
                            dp[index + 1, 0, transactions]
                        );
                    }
                    else
                    {
                        dp[index, buy, transactions] = Math.Max(
                            +prices[index] + dp[index + 1, 0, transactions - 1],
                            dp[index + 1, 1, transactions]
                        );
                    }
                }
            }
        }

        return dp[0, 0, k];
    }
}
